// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sales_Web_MVC_1.Data;

#nullable disable

namespace Sales_Web_MVC_1.Migrations
{
    [DbContext(typeof(Sales_Web_MVC_1Context))]
    [Migration("20250926010919_CreateDbSaler")]
    partial class CreateDbSaler
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sales_Web_MVC_1.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("Sales_Web_MVC_1.Models.Sales_Venda_Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AmountQuantidade")
                        .HasColumnType("float");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Seller_Vendedor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Seller_Vendedor_Id");

                    b.ToTable("Sales_Venda_Record");
                });

            modelBuilder.Entity("Sales_Web_MVC_1.Models.Seller_Vendedor_", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseSalário")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sales_Vendas_")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Seller_Vendedor");
                });

            modelBuilder.Entity("Sales_Web_MVC_1.Models.Sales_Venda_Record", b =>
                {
                    b.HasOne("Sales_Web_MVC_1.Models.Seller_Vendedor_", "Seller_Vendedor_")
                        .WithMany("Sales_Vendas")
                        .HasForeignKey("Seller_Vendedor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller_Vendedor_");
                });

            modelBuilder.Entity("Sales_Web_MVC_1.Models.Seller_Vendedor_", b =>
                {
                    b.HasOne("Sales_Web_MVC_1.Models.Departamento", "Departamento")
                        .WithMany("Seller_Vendedors")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Sales_Web_MVC_1.Models.Departamento", b =>
                {
                    b.Navigation("Seller_Vendedors");
                });

            modelBuilder.Entity("Sales_Web_MVC_1.Models.Seller_Vendedor_", b =>
                {
                    b.Navigation("Sales_Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
